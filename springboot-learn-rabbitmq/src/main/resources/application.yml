server:
  port: 8090

spring:
  application:
    name: learn-rabbitmq
  rabbitmq:
    host: localhost
    port: 5672
    username: futao
    password: 123456789
    virtual-host: /springboot-learn
    connection-timeout: 15000
    publisher-confirms: true
    publisher-returns: true
    template:
      # 必须设置成true 消息路由失败通知监听者，而不是将消息丢弃
      mandatory: true
    listener:
      simple:
        # 每个队列启动的消费者数量
        concurrency: 1
        # 每个队列最大的消费者数量
        max-concurrency: 1
        # 手动签收ACK-那么需要在代码中手动设置ACK
        acknowledge-mode: manual
        retry:
          enabled: true
          initialInterval: 3s
          # 两次尝试之间的最长持续时间。
          max-interval: 2s
          # 最大重试次数
          max-attempts: 2
        # 每次从RabbitMQ获取的消息数量
        prefetch: 1
        # 拒绝的消息是否重新排队（重试次数超过上面的设置之后是否丢弃)---测试下来没差别，消息都会到deadLetterQueue中，具体不了解
        default-requeue-rejected: true
  datasource:

    url: jdbc:mysql://localhost:3306/springboot_learn_rabbitmq?useUnicode=true&characterEncoding=utf8
    username: root
    password: 123456789

mybatis-plus:
  mapper-locations: classpath*:/mapper/*Mapper.xml
  configuration:
    map-underscore-to-camel-case: true
debug: false
logging:
  level:
    com:
      futao:
        springboot:
          learn:
            rabbitmq:
              config: debug
